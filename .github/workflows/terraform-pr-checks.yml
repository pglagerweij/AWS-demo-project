name: tfchecks-pr-commenter
on:
  pull_request:
    paths:
    - 'terraform/**'
    - '.github/workflows/terraform-pr-checks.yml'

env:
  AWS_REGION: eu-west-1
  AWS_ACCOUNT_ID: 613963413230
  PR_ROLE: oidc_ro

jobs:
  tfsec:
    name: tfsec PR commenter
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v3
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          github_token: ${{ github.token }}
          working_directory: 'terraform'
  tflint:
    name: tflint
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Clone repo
        uses: actions/checkout@v3 
      - name: Cache tflint plugin dir
        uses: actions/cache@v3
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}
      - uses: terraform-linters/setup-tflint@v2
        name: Setup TFLint
        with:
          github_token: ${{ github.token }}
          tflint_version: latest
      - name: Configure AWS credentials for PR role
        uses: aws-actions/configure-aws-credentials@v1-node16
        if: github.event_name == 'pull_request'
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.PR_ROLE }}
          role-session-name: github-demo
          aws-region: ${{ env.AWS_REGION }} 
      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform init
      - name: Show version
        working-directory: terraform
        run: tflint --version
      - name: Init TFLint
        working-directory: terraform
        run: tflint --init
      - name: Run TFLint
        id: tflint
        working-directory: terraform
        run: |
          echo 'TFLINT_OUTPUT<<EOF' >> $GITHUB_ENV
          tflint -f compact --module --force >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          tflint -f compact --module
        continue-on-error: true
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ env.TFLINT_OUTPUT }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('TFlint status')
            })

            // 2. Prepare format of the comment
            const output = `#### TFlint status ðŸ–Œ\`${{ steps.tflint.outcome }}\`

            <details><summary>Show Tflint</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
      - name: Tflint Status
        if: steps.tflint.outcome == 'failure'
        run: exit 1